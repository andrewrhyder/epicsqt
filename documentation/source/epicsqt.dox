/*
 *  This file is part of the EPICS QT Framework, initially developed at
the Australian Synchrotron.
 *
 *  The EPICS QT Framework is free software: you can redistribute it and/or
modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  The EPICS QT Framework is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with the EPICS QT Framework.  If not, see
<http://www.gnu.org/licenses/>.
 *
 *  Copyright (c) 2011
 *
 *  Author:
 *    Andrew Rhyder
 *  Contact details:
 *    andrew.rhyder@synchrotron.org.au
 */

/*
  This file contains NO source code, just some documentation for doxygen to
  parse.
*/

/*!
  \mainpage QCa - EPICS aware Qt Widgets

QCa is a layered software framework for accessing EPICS data using Channel Access on a range of platforms.\n\n

The QCa framework provides object oriented C++ access to control systems using EPICS (Experimental Physics and
Industrial Control System). It is based on Qt, a widely used cross-platform application development framework.\n\n

GUI or console based applications can be written that use QCa at several levels. QCa includes Qt plugin libraries,
EPICS aware widgets, data formatting classes, and classes for accessing raw EPICS data in a Qt friendly way.\n\n

QCa also includes an application - ASgui - for displaying forms produced by the Qt development tool ‘Designer’. Using this
application a complete EPICS GUI system can be generated without writing any code. A GUI system produced in this way can
interact with existing EPICS display tools such as EDM.\n\n

QCa handles much of the complexities of Channel Access including initiating and managing a channel. Applications using QCa
can interact with Channel Access using Qt based classes and data types. Channel Access updates are delivered using Qt’s signals and slots mechanism.

  \image html ASguiExample5.png

  \if homepage
  \section homepage Project page
  The official project page is hosted at 
	<a href="http://epicsqt.sourceforge.net/">sourceforge</a>
  \endif

  \section documentation Documentation

  Support documents can be found in the <a href="https://sourceforge.net/projects/epicsqt/files/documentation/">documentation</a> section of the epicsqt sourceforge project.
  The framework download (available on the epicsqt sourceforge <a href="https://sourceforge.net/projects/epicsqt/">homepage</a>) also includes this documentation as well as full Doxygen generated documentation of all the epicsqt classes and widgets.

  \section license License

  epicsqt is distributed under the terms of the \ref epicsqtlicense.
 
  \section platforms Platforms

  epicsqt might be usable in all environments where you find
  <a href="http://www.trolltech.com/products/qt">Qt</a>.
  It is compatible with Qt >= 4.4.

  \section screenshotsonmainpage Screenshots
  - \ref ASguiscreenshots\n
  - \ref otherappscreenshots\n
  - \ref designerscreenshots\n
  - \ref qtcreatorscreenshots\n

  \latexonly Screenshots are only available in the HTML docs.\endlatexonly

  \section downloads Downloads
  Stable releases and development snapshots are available at the epicsqt <a href="http://sourceforge.net/projects/epicsqt">project page</a>.

  For getting a development snapshot from the SVN repository:
  \code svn svn co https://epicsqt.svn.sourceforge.net/svnroot/epicsqt epicsqt
\endcode

  \section installonmainpage Installation
 
  Read <a href="http://sourceforge.net/projects/epicsqt/files/documentation/QCa_GettingStarted.pdf/download"> QCa_GettingStarted.pdf</a> in the documentation for setting up an enviroment for building or using the epicsqt framework.\n
  To build the framework, open epicsqt.pro in QtCreator, ensure shaddow build is turned off, and hit build.\n
  Symbolic links to the resultant library libQCaPlugin.so will need to set up according to how it is to be used - see QCa_GettingStarted.pdf for details.\n
  Any Qt specific queries? start at <a href="http://www.trolltech.com/developer/documentation/index.html">Qt developer documentation</a>

  \section support Support
  Visit the sourceforge epicsqt <a href="http://sourceforge.net/projects/epicsqt/support"> support page</a> for assistance.

  \section relatedprojects Related Projects

  <a href="http://qwt.sourceforge.net/">Qwt</a>, The core of a Channel Access aware plotting widget.

  \section credits Credits:
  \par Authors: 
    Andrew Rhyder, Anthony Owen, Glenn Jackson
  \par Project admin:
    Andrew Rhyder \<andrew.rhyder@synchrotron.org.au\>
*/

/*!
  \page epicsqtlicense GNU General Public License
The EPICS QT Framework is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n
The EPICS QT Framework is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n
See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with the EPICS QT Framework.\n
If not, see <a href="http://www.gnu.org/licenses/">"http://www.gnu.org/licenses/</a>
*/

/*!
  \page qwtinstall INSTALL
  \include "INSTALL"
*/

/*!
  \page ASguiscreenshots ASgui screen shots
  \image html ASguiExample1.png "Australian Synchrotron mock up"\n\n
  \image html ASguiExample2.png "Monochromator referencing"\n\n
  \image html ASguiExample3.png "Beam position monitor"\n\n
  \image html ASguiExample4.png "Insertion device"\n\n
  \image html ASguiExample5.png "Injection efficiency monitor"
*/

/*!
  \page otherappscreenshots other applications using epicsqt widgets
  \image html otherappExample1.png "Medical Imaging beamline"\n\n
  \image html otherappExample2.png "Motor controller"\n\n
  \image html otherappExample3.png "Motor controller"
*/

/*!
  \page designerscreenshots Qt Designer
  \image html designerExample1.png "Editing multiple GUIs"\n\n
  \image html designerExample2.png "Editing a GUI"
*/

/*!
  \page qtcreatorscreenshots Qt Creator
  \image html qtcreatorExample1.png "Application using epicsqt data source classes"
*/


