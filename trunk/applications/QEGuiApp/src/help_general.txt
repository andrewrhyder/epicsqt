Refer to QE_QEGuiAndUserInterfaceDesign.pdf for comprehensive documentation on the QEGui
application.

Options

-a      Adjust the GUIs scaling. This option takes a single value with is the percentage
        scaling to be applies to each GUI. The value may be either an integer or a floating
        point number. If specified its value will be constrained to the range 40 to 400.

-s      Single application.
        QEGui will attempt to pass all parameters to an existing instance of QEGui. When
        one instance of QEGui managing all QEGui windows, all windows will appear in the
        window menu. A typical use is when a QEGui window is started by a button in EDM.

-e      Enable edit menu option.
        When the edit menu is enabled Designer can be launched from QEGui, typically to
        edit the current GUI. Note QEGui will only reload modified ui files if/when this
        option is used.

-b      Disable menu bar.

-u      Disable status bar.

-r      Restore from saved configuration.
        If a configuration name is not provided with this option the saved default
        configuration is used if available.
        Note, a single configuration file may contain multiple named configurations as well
        as a default configuration.

-c      Configuration file.
        Named configurations will be saved to and read from this file. If this option is
        not provided the default is QEGuiConfig.xml in the current working directory.

-p      Search paths
        When opening a file, this list of space seperated paths may be used when searching
        for the file. Paths may end with ... to search all sub directories of the path.
        Refer to 'File location rules' for the rules QEGui uses when searching for a file.

-m      Macro substitutions applied to GUIs

        macros format: keyword=substitution, keyword=substitution,...
        Enclose in quotes if this parameter contains any spaces.

        Typically substitutions are used to specify specific variable names when loading
        generic template forms. Substitutions are not limited to template forms, and some
        QEWidgets use macro substitutions for purposes other than variable names.

-w      Window customisation file.
        This file contains named sets of window menu bar and tool bar customisations.
        Named customisations will be read from this file. If this option is not provided
        an attempt will be made to use QEGuiCustomisation.xml in the current working
        directory. A customisation file is optional.


-n      Startup window customisation name.
        The name of the window and menu bar customisation set to apply to windows created
        when the application starts (the .ui files specified on the command line). This
        name should be the name of one of the sets of window customisations read from the
        window customisation file.


-d      Default window customisation name.
        The name of the window and menubar customisation set to apply to all windows
        created when no customisation name has otherwise been provided. This name should
        be the name of one of the sets of window customisations read from the window
        customisation file. Typically, this is required when windows created through the
        ‘Open’ file dialog, or windows created through a QE push button require a different
        set of customisations to the system defaults. Note the customisation set specified
        in the –n switch only applies to windows created at startup and specified on the
        command line.


-t      Application title.
        This title will be used instead of the default application title of 'QEGui'

-h      Display help text explaining these options and exit.

-v      Display version info and exit.


Parameters

filenames  GUI filenames to open. Each filename is a separate parameter.


Environment variables

As well as the standard Channel Access (client) environment variables, the QE framework
and hence the QEGui program's behaviour may be modified by setting a number of QE
environment variables.


QE_ARCHIVE_LIST - specifies a list of channel archive servers. The format of this
variable is a space separated set of one or more archive severs. Each server is specified
as a hostname:port/endpoint triplet, e.g.:

  CR01ARC01:80/cgi-bin/ArchiveDataServer.cgi CR01ARC02:80/cgi-bin/ArchiveDataServer.cgi

A leading http:// for each triplet is neither required nor permitted.


QE_ARCHIVE_PATTERN - This variable specifies the pattern match applied when the framework
retrieves sets of channel names from the archiver. The pattern is a regular expression.
If undefined/empty then all names are retrived.


QE_RECORD_FIELD_LIST - This variable specifies a file that defines the set of field
names associated with each record type, as used by the PV Propeties widget. If specified,
the data will be merged with the internal resoure file built into the framework.
The format of the file is a simple ASCII file consisting of:

   # example             -- comment lines - ignored
                         -- blank lines - ignored
   <<recordtype>>        -- introduce record type, e.g. <<ai>>
   field_name            -- field name, e.g. DESC
   field_name            -- field name, e.g. SCAN

All field names are associated with the preceeding record type.

The internal resource file defines fields for all the records from base-3-14-11, most of
the records from the synApps distribution, together with the AS developed concat record,
i.e. the following record types:
   ai          ao          aSub        asyn        bi          
   bo          busy        calc        calcout     camac       
   compress    concat      dfanout     dxp         epid        
   er          erevent     event       fanout      genSub      
   histogram   longin      longout     mbbi        mbbiDirect  
   mbbo        mbboDirect  mca         motor       permissive  
   sCalcout    scaler      scanparm    sel         seq         
   sscan       sseq        state       status      stringin    
   stringout   subArray    sub         swait       table       
   timestamp   transform   vme         waveform    

The file specified by the QE_RECORD_FIELD_LIST variable can be used to define additional
record types and/or completely replace the specification of a specified record type. It 
cannot be used to define extra fields for an existing record type.

